import { createSlice } from '@reduxjs/toolkit'

const initialState = {
    value: 0,
} //This represents the initial state of the slice, meaning that the value will start at 0 

export const counterSlice = createSlice
    /*createSlice is a utility that simplifies the creation of Redux slices, which includes action creators and reducer logic for a specific part of your application's state.*/
    ({
        name: 'counter',
        initialState,
        reducers: {
            increment: (state) => {
                state.value += 1
            },
            decrement: (state) => {
                state.value -= 1
            },
            incrementByAmount: (state, action) => {
                state.value += action.payload
            },
        },
    })

/**This is where the slice is created using createSlice.

name: 'counter': The name of the slice, used to identify it in the Redux store.

initialState: The initial state of the slice (in this case, the value starts at 0).

reducers: An object containing the reducer functions (or "case reducers"). These define how the state should be updated when certain actions are dispatched.

increment: A reducer that increases the value property of the state by 1.
decrement: A reducer that decreases the value property of the state by 1.
incrementByAmount: A reducer that increases the value by an arbitrary amount, which is passed in via action.payload. */
// Action creators are generated for each case reducer function
export const { increment, decrement, incrementByAmount } = counterSlice.actions
/**This exports the action creators generated by createSlice for each of the reducer functions (increment, decrement, incrementByAmount). These actions can be dispatched to trigger state updates. */
export default counterSlice.reducer
/**The reducer function created by createSlice is exported as the default export. This reducer will be used by the Redux store to handle actions related to the counter slice of the state. */

